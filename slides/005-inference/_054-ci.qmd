---
name: ci
---

---

## Confidence intervals

Until now, we have considered [point estimates]{.note} of population parameters.

- Sometimes a range of values is more interesting/honest.

. . .

We can construct $(1-\alpha)\cdot100$-percent level confidence intervals for $\beta_2$

$$
\hat{\beta}_2 \pm t_{1-\alpha/2, n-2} \, \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)
$$

. . .

$t_{1-\alpha/2,n-2}$ denotes the $1-\alpha/2$ quantile of a $t$ distribution with $n-2$ degrees of freedom.

---

## Confidence intervals

[Q:]{.note} _Where does the confidence interval formula come from?_

. . .

[A:]{.note} Formula is a result from the rejection condition of a two-sided test.

[Reject]{.hi-red} H[0]{.sub} if 

$$
|t| > t_\text{crit}
$$

. . .

The test condition implies that we:

[Fail to reject]{.hii} H[0]{.sub} if

$$
|t| \leq t_\text{crit}
$$


Which is equivalent to:

[Fail to reject]{.hii} H[0]{.sub} if 
$$
-t_\text{crit} \leq t \leq t_\text{crit}
$$

---

## Confidence intervals {data-visibility="uncounted"}

Replacing $t$ with its formula gives:

[Fail to reject]{.hii} H[0]{.sub} if 

$$-t_\text{crit} \leq \frac{\hat{\beta}_2 - \beta_2^0}{\mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)} \leq t_\text{crit}
$$

. . .

Standard errors are always positive, so the inequalities do not flip when we multiply by $\mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)$:

[Fail to reject]{.hii} H[0]{.sub} if 
$$
-t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right) \leq \hat{\beta}_2 - \beta_2^0\leq t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)
$$


---

## Confidence intervals {data-visibility="uncounted"}

Subtracting $\hat{\beta}_2$ yields

[Fail to reject]{.hii} H[0]{.sub} if 
$$
-\hat{\beta}_2 -t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right) \leq - \beta_2^0 \leq - \hat{\beta}_2 + t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)
$$

. . .

Multiplying by -1 and rearranging gives

[Fail to reject]{.hii} H[0]{.sub} if 

$$
\hat{\beta}_2 - t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right) \leq \beta_2^0 \leq \hat{\beta}_2 + t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)
$$

---

## Confidence intervals {data-visibility="uncounted"}

Replacing $\beta_2^0$ with $\beta_2$ and dropping the test condition yields the interval:

$$
\hat{\beta}_2 - t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right) \leq \beta_2 \leq \hat{\beta}_2 + t_\text{crit} \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)
$$

which is equivalent to 

$$
\hat{\beta}_2 \pm t_\text{crit} \, \mathop{\hat{\text{SE}}} \left( \hat{\beta}_2 \right)
$$

---

## Confidence intervals

[Main insight:]{.note} 

- If a 95 percent confidence interval contains zero, then we [fail to reject]{.hii} the null hypothesis at the 5 percent level.
- If a 95 percent confidence interval does not contain zero, then we [reject]{.hi-red} the null hypothesis at the 5 percent level.

<br>
<br>

_Generally,_ a $(1- \alpha) \cdot 100$ percent confidence interval embeds a two-sided test at the $\alpha \cdot 100$ level.

---

## Confidence intervals [Ex.]{.ex}

```{r}
#| echo: true

lm(y ~ x, data = pop_df) %>% tidy()
```

<br>

. . .

```{r}
#| echo: true

# find degrees of freedom
dof <- summary(lm(y ~ x, data = pop_df))$df[2]
# return critical value
qt(0.975, dof)
```

<br>

. . .

[_95% confidence interval_]{.note} for $\beta_2$ is:

$$
0.567 \pm 1.98 \times 0.0793 = \left[ 0.410,\, 0.724 \right]
$$

---

## Confidence intervals

We have a confidence interval for $\beta_2$, *i.e.,* $\left[ 0.410,\, 0.724 \right]$

<br>

[_What does it mean?_]{.fragment}

<br>

. . .

[_Informally:_]{.note} The confidence interval gives us a region (interval) in which we can place some trust (confidence) for containing the parameter.

. . .

[More formally:]{.note} If we repeatedly sample from our population and construct confidence intervals for each of these samples, then $(1-\alpha) \cdot100$ percent of our intervals (*e.g.,* 95%) will contain the population parameter *somewhere in the interval*.

---

## Confidence intervals

We drew _10,000_ samples (each of size $n = 30$) from our population and estimated our regression model for each sample:

$$ Y_i = \hat{\beta}_1 + \hat{\beta}_2 X_i + \hat{u}_i $$
<center>[_(repeated 10,000 times)_]{.note .small}</center>

Now, let's estimate 95% confidence intervals for each of these intervals...

---

## Confidence intervals

```{r}
#| include: false


# Create confidence intervals for b1
ci_df <- sim_df %>% filter(term == "x") %>%
  mutate(
    lb = estimate - std.error * qt(.975, 28),
    ub = estimate + std.error * qt(.975, 28),
    ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub),
    ci_above = lm0$coefficients[2] < lb,
    ci_below = lm0$coefficients[2] > ub,
    ci_group = 2 * ci_above + (!ci_below)
  ) %>%
  arrange(ci_group, estimate) %>%
  mutate(x = 1:1e4)
```

_From our previous simulation_, `r ci_df$ci_contains %>% multiply_by(100) %>% mean() %>% round(1)`% of 95% confidence intervals contain the true parameter value of $\beta_2$.

```{r}
#| echo: false
#| fig.width: 10

# Plot
ggplot(data = ci_df) +
geom_segment(aes(y = lb, yend = ub, x = x, xend = x, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
scale_y_continuous(breaks = lm0$coefficients[2]) +
scale_color_manual(values = c(hp, "grey85")) +
mytheme_s +
theme(
  axis.text.x = element_blank(),
  legend.position = 'none',
  axis.text.y = element_text(size = 18)) + xlab("") + 
  ylab("") 
```

---

## [Ex.]{.ex} Association of police with crime

You can instruct `tidy` to return a 95 percent confidence interval for the association of campus police with campus crime:

```{r}
#| echo: true

lm(crime ~ police, data = campus) %>% 
  tidy(conf.int = TRUE, conf.level = 0.95)
```

---

## [Ex.]{.ex} Association of police with crime

```{r}
#| fig.height: 5
#| echo: false

reg <- lm(crime ~ police, data = campus)

conf1 <- tidy(reg, conf.int = TRUE, conf.level = 0.75) %>% 
  filter(term == "police") %>% 
  mutate(term = "75% CI")
conf2 <- tidy(reg, conf.int = TRUE, conf.level = 0.9) %>% 
  filter(term == "police") %>% 
  mutate(term = "90% CI")
conf3 <- tidy(reg, conf.int = TRUE, conf.level = 0.95) %>% 
  filter(term == "police") %>% 
  mutate(term = "95% CI")
conf4 <- tidy(reg, conf.int = TRUE, conf.level = 0.99) %>% 
  filter(term == "police") %>% 
  mutate(term = "99% CI")

conf <- bind_rows(conf1, conf2, conf3, conf4)

conf %>% 
  ggplot(aes(x = term, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_pointrange(color = hp, size = 1) +
  geom_hline(yintercept = 0, linetype = "dashed", size = 1) +
  coord_flip() +
  mytheme_s +
  theme(
    axis.title.y = element_text(size = 18, angle = 90),
    axis.title.x = element_text(size = 18)
  ) +
  ylab("Value") +
  xlab("Police Coefficient")
```

Four confidence intervals for the same coefficient.
